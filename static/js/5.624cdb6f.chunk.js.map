{"version":3,"sources":["components/card/index.js","utils/filterData.js","components/sort/index.js","utils/sort.js","components/search/style.js","components/search/index.js","pages/moviespage/style.js","pages/moviespage/index.js"],"names":["Meta","AntdCard","Card","title","imageUrl","releaseYear","Details","style","margin","padding","placement","hoverable","cover","alt","src","filterData","data","programType","entries","filter","entry","index","Option","Select","Sort","handleChange","styles","defaultValue","width","marginBottom","onChange","value","titleAToZ","a","b","titleZtoA","releaseYearLowToHigh","releaseYearHighToLow","InputX","styled","Input","media","tablet","mobile","SearchBy","placeholder","Container","div","MoviesPage","useState","sortBy","setSortBy","searchBy","setSearchBy","useContext","Context","state","fetchStreams","useEffect","Object","keys","length","Layout","size","e","target","alignSelf","gutter","item","toLowerCase","includes","sort","utils","map","images","lg","md","sm","xs","key","url"],"mappings":"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","file":"static/js/5.624cdb6f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card as AntdCard, Tooltip } from 'antd';\r\n\r\nconst { Meta } = AntdCard;\r\n\r\nconst Card = ({ title, imageUrl, releaseYear }) => {\r\n  const Details = () => (\r\n    <>\r\n      <p style={{ margin: 0, padding: 0 }}>{title}</p>\r\n      <p style={{ margin: 0, padding: 0 }}>{`Release year - ${releaseYear}`}</p>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Tooltip title={releaseYear ? <Details /> : title} placement=\"bottom\">\r\n      <AntdCard hoverable cover={<img alt=\"example\" src={imageUrl} />}>\r\n        <Meta title={title} />\r\n      </AntdCard>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","//filter the data by programType and return array with first 21 items\r\nexport const filterData = (data, programType) =>\r\n  data.entries\r\n    .filter(\r\n      (entry) => entry.releaseYear >= 2010 && entry.programType === programType\r\n    )\r\n    .filter((entry, index) => index < 21);\r\n","import React from 'react';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst Sort = ({ handleChange, styles }) => {\r\n  return (\r\n    <>\r\n      <Select\r\n        defaultValue=\"titleAToZ\"\r\n        style={{ width: 180, marginBottom: 10, ...styles }}\r\n        onChange={handleChange}\r\n      >\r\n        <Option value=\"titleAToZ\">Title (A-Z)</Option>\r\n        <Option value=\"titleZtoA\">Title (Z-A)</Option>\r\n        <Option value=\"releaseYearLowToHigh\">Release year (Oldest)</Option>\r\n        <Option value=\"releaseYearHighToLow\">Release year (Latest)</Option>\r\n      </Select>\r\n    </>\r\n  );\r\n};\r\nexport default Sort;\r\n","// sort by a-z\r\nconst titleAToZ = (a, b) => (a.title > b.title ? 1 : -1);\r\n\r\n//sort by z-a\r\nconst titleZtoA = (a, b) => (a.title > b.title ? -1 : 1);\r\n\r\n//sort by latest to oldest\r\nconst releaseYearHighToLow = (a, b) => b.releaseYear - a.releaseYear;\r\n\r\n//sort by oldest to latest\r\nconst releaseYearLowToHigh = (a, b) => a.releaseYear - b.releaseYear;\r\n\r\nexport default {\r\n  titleAToZ,\r\n  titleZtoA,\r\n  releaseYearLowToHigh,\r\n  releaseYearHighToLow,\r\n};\r\n","import styled from 'styled-components';\r\nimport { Input } from 'antd';\r\n\r\nimport media from '../media';\r\n\r\nexport const InputX = styled(Input)`\r\n  align-self: center;\r\n  width: 50%;\r\n  margin-bottom: 10px;\r\n\r\n  ${media.tablet`\r\n      width:75%\r\n      `}\r\n\r\n  ${media.mobile`\r\n      width:100%\r\n      `}\r\n`;\r\n","import React from 'react';\r\nimport { InputX } from './style';\r\n\r\nconst SearchBy = ({ handleChange }) => (\r\n  <InputX placeholder=\"Search by Title\" onChange={handleChange} />\r\n);\r\n\r\nexport default SearchBy;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport { Context } from '../../context/DataContext';\r\nimport { filterData } from '../../utils/filterData';\r\nimport Layout from '../../components/Layout/index';\r\nimport Card from '../../components/card';\r\nimport Spinner from '../../components/spinner';\r\nimport Sort from '../../components/sort';\r\nimport Search from '../../components/search';\r\nimport utils from '../../utils/sort';\r\nimport { Container } from './style';\r\n\r\nconst MoviesPage = () => {\r\n  const [sortBy, setSortBy] = useState('titleAToZ');\r\n  const [searchBy, setSearchBy] = useState('');\r\n  const { state, fetchStreams } = useContext(Context);\r\n\r\n  const handleSelectChange = (value) => {\r\n    //set the select value to state\r\n    setSortBy(value);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    //set the input value to state\r\n    setSearchBy(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //fetch streams if state is empty\r\n    Object.keys(state).length === 0 && fetchStreams();\r\n  }, [fetchStreams, state]);\r\n\r\n  //If state is empty return spinner else return cards\r\n  return (\r\n    <Layout title=\"Popular Movies\">\r\n      {Object.keys(state).length === 0 ? (\r\n        <Spinner size=\"large\" />\r\n      ) : (\r\n        <Container>\r\n          <Search handleChange={handleInputChange} />\r\n          <Sort\r\n            handleChange={handleSelectChange}\r\n            styles={{ alignSelf: 'flex-end' }}\r\n          />\r\n\r\n          <Row gutter={[16, 16]}>\r\n            {filterData(state, 'movie')\r\n              .filter((item) =>\r\n                //filter those item whose title includes searchBy(state)\r\n                item.title.toLowerCase().includes(searchBy.toLowerCase())\r\n              )\r\n              //call the sort function from utils accordingly\r\n              .sort((a, b) => utils[sortBy](a, b))\r\n              .map(({ title, images, releaseYear }) => (\r\n                <Col lg={4} md={6} sm={6} xs={12} key={title}>\r\n                  <Card\r\n                    key={title}\r\n                    title={title}\r\n                    releaseYear={releaseYear}\r\n                    imageUrl={images['Poster Art'].url}\r\n                  />\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}